// <auto-generated />
using System;
using KinoSystemRezerwacji.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KinoSystemRezerwacji.Migrations
{
    [DbContext(typeof(CinemaContext))]
    [Migration("20240130120552_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("KinoSystemRezerwacji.Models.Film", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CzasTrwania")
                        .HasColumnType("int");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tytul")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Filmy");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CzasTrwania = 137,
                            Opis = "Dramat wojenny...",
                            Tytul = "Niezłomny"
                        },
                        new
                        {
                            Id = 2,
                            CzasTrwania = 152,
                            Opis = "Kolejna epicka część...",
                            Tytul = "Gwiezdne Wojny: Ostatni Jedi"
                        },
                        new
                        {
                            Id = 3,
                            CzasTrwania = 148,
                            Opis = "Thriller science-fiction...",
                            Tytul = "Incepcja"
                        },
                        new
                        {
                            Id = 4,
                            CzasTrwania = 128,
                            Opis = "Muzyczny romans...",
                            Tytul = "La La Land"
                        },
                        new
                        {
                            Id = 5,
                            CzasTrwania = 169,
                            Opis = "Film science-fiction...",
                            Tytul = "Interstellar"
                        },
                        new
                        {
                            Id = 6,
                            CzasTrwania = 155,
                            Opis = "Epicki film...",
                            Tytul = "Gladiator"
                        });
                });

            modelBuilder.Entity("KinoSystemRezerwacji.Models.Seans", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataSeansu")
                        .HasColumnType("datetime2");

                    b.Property<int>("FilmId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FilmId");

                    b.ToTable("Seanse");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataSeansu = new DateTime(2024, 1, 30, 18, 0, 0, 0, DateTimeKind.Local),
                            FilmId = 1
                        },
                        new
                        {
                            Id = 2,
                            DataSeansu = new DateTime(2024, 1, 30, 18, 0, 0, 0, DateTimeKind.Local),
                            FilmId = 2
                        },
                        new
                        {
                            Id = 3,
                            DataSeansu = new DateTime(2024, 1, 30, 18, 0, 0, 0, DateTimeKind.Local),
                            FilmId = 3
                        },
                        new
                        {
                            Id = 4,
                            DataSeansu = new DateTime(2024, 1, 30, 18, 0, 0, 0, DateTimeKind.Local),
                            FilmId = 4
                        },
                        new
                        {
                            Id = 5,
                            DataSeansu = new DateTime(2024, 1, 30, 18, 0, 0, 0, DateTimeKind.Local),
                            FilmId = 5
                        },
                        new
                        {
                            Id = 6,
                            DataSeansu = new DateTime(2024, 1, 30, 18, 0, 0, 0, DateTimeKind.Local),
                            FilmId = 6
                        });
                });

            modelBuilder.Entity("KinoSystemRezerwacji.Models.Seans", b =>
                {
                    b.HasOne("KinoSystemRezerwacji.Models.Film", "Film")
                        .WithMany()
                        .HasForeignKey("FilmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Film");
                });
#pragma warning restore 612, 618
        }
    }
}
